[{"title":"Element Plus","url":"/2022/02/05/Element-Plus/","content":"> 基于 Vue 3，面向设计师和开发者的组件库。\n>\n> element终于发布新版本了，这让我们使用Vue3的时候更方便，以下是两个element对于vue的使用方法\n\n## 一、Element UI\n\n[Element UI官网]: https://element.eleme.io/#/zh-CN\n\n如果是Vue 2.x搭建的项目，使用elementUI如下\n\n```\nvue add element\n```\n<!--more-->\n\n完整引入，在main.js下写\n\n```js\nimport Vue from 'vue';\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\nimport App from './App.vue';\n\nVue.use(ElementUI);\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n});\n```\n\n之后在组件里寻找需要的功能\n\n## 二、Element Plus\n\n[Element Plus官网]: https://element-plus.gitee.io/zh-CN/\n\n如果是Vue3.x使用这个，在搭建好的项目了，下载\n\n```\n npm install element-plus --save\n```\n\n### 使用\n\n在main.js中写\n\n```js\nimport { createApp } from 'vue'\nimport ElementPlus from 'element-plus'\nimport 'element-plus/dist/index.css'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(ElementPlus)\napp.mount('#app')\n```\n\n\n\n","tags":["Vue","Element"],"categories":["-[Vue] -[Element]"]},{"title":"让div水平垂直居中","url":"/2022/01/26/让div水平垂直居中/","content":"使用css让div盒子实现水平垂直居中的几种方法\n\n## 一、flex\n\n使用flex布局，在父元素上写，子元素将水平垂直居中\n\n```html\n#container{\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n}\n```\n<!--more-->\n\n\n## 二、使用定位\n\n准备\n\n```html\n<style type=\"text/css\">\n\nhtml,body{\n\theight:100%;  /*注意html不设置高度 body也就没有继承高度，就会随内容支撑高度*/\n\toverflow: hidden;  \n\tmargin:0;\n\tpadding: 0;\n}\n</style>\n\n```\n\n### 1.已知道宽高，绝对定位,margin减去div一半宽高\n\n```html\n#box{\n\tbackground: red;\n\twidth: 200px;\n\theight: 200px;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\tmargin-left: -100px;\n\tmargin-top: -100px;\n}\n```\n\n### 2.div宽高未知，使用translate平移一半宽高\n\n```html\n#box {\n\tbackground: red;\n\twidth: 200px;\n\theight: 200px;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%,-50%);\n}\n```\n\n### 3.定位好，margin:auto\n\n```html\n#box {\n\tbackground: red;\n\twidth: 200px;\n\theight: 200px;\n\tposition: absolute;\n\tleft: 0;\n\tright: 0;\n\ttop: 0;\n\tbottom: 0;\n\tmargin: auto;\n}\n```\n\n","tags":["css"]},{"title":"Git","url":"/2022/01/25/Git/","content":"## 一、Git文件的三种状态和工作模式\n\n### 1.状态\n\n使用Git操作文件时，文件的三种状态\n\n|       状态        |                             描述                             |\n| :---------------: | :----------------------------------------------------------: |\n| 已提交(committed) |             表示数据已经安全的保存在本地数据库中             |\n| 已修改(modified)  |            表示修改了文件，但还没有保存到数据库中            |\n|  已暂存(staged)   | 表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中 |\n\n<!--more-->\n\n### 2.工作模式\n\nGit项目的三个工作区域\n\n|  分类   |                             描述                             |\n| :-----: | :----------------------------------------------------------: |\n| 工作区  |                      自己本地创建的项目                      |\n| 暂存区  | Git版本库里存着很多东西，其中最重要的是称为stage(或者叫index)的暂存区，还有Git自动创建的第一个分支master，以及指向master的一个指针叫HEAD |\n| Git仓库 |  工作区有一个隐藏目录.git,这个不算是工作区，而是Git的版本库  |\n\n基本的Git工作流程如下：\n\n- 在工作区中修改文件\n- 对修改的文件进行快照，然后添加到暂存区\n- 提交更新，将保存在暂存区域的文件快照永久转储到Git仓库中 \n\n## 二、创建版本库并提交文件\n\n```c\ngit init 初始化本地仓库\ngit status 查看状态\ngit add . 添加文件,<path>是文件也可以是目录\ngit commit -m '注释' 提交添加的文件并备注说明\ngit remote add origin xxx  xxx是远程仓库地址，连接远程仓库\ngit push -u origin master 将本地仓库文件推送到远程仓库\n```\n\n## 三、文件操作\n\n### 1、查看\n\n```c\ngit log 查看变更日志\ngit branch 查看分支\ngit reflog 查看之前的修改操作\ngit ls-files 查看暂存区文件 \ngit log -5 --pretty=oneline 查看最近五次修改操作\n```\n\n### 2、删除\n\n```c\ngit rm 文件名.后缀 工作区和本地仓库的文件都删除\ngit remote rm origin 删除远程仓库\n```\n\n### 3、文件恢复\n\n如果已经把文件提交到本地仓库，却不小心误删了\n\n```c\ngit checkout -- 文件名.后缀 如果已经把文件提交到本地仓库，不小心误删了，可以从本地仓库把文件恢复到工作区\n```\n\n## 四、版本回退\n\n```c\ngit reset --hard HEAD^    //回退多少个版本就多少个^,或者~1,回退多少个版本数字就写多少个，或者 -hard 版本号    \n```\n\n","tags":["Github","Git"]},{"title":"使用jsDeliver+Github建图床","url":"/2022/01/23/使用jsDeliver-Github建图床/","content":"\n\n## 一、介绍\n\n### 1.什么是jsDlive\n\n> jsDelivr 是一个免费开源的 CDN 解决方案，用于帮助开发者和站长。包含 JavaScript 库、jQuery 插件、CSS 框架、字体等等 Web 上常用的静态资源。\n\n### 2.为什么使用图床\n\n> 图床一般是指储存图片的服务器，有国内和国外之分。国外的图床由于有空间距离等因素决定访问速度很慢影响图片显示速度。国内也分为单线空间、多线空间和cdn加速三种。\n>\n> Github使用的是cdn加速\n\n我们写博客或网站时，会使用到图片，把图片放到本地的话，可能会出现问题，还会影响网页加载速度，使用图床能很好解决这些问题。\n\n<!--more-->\n## 二、使用Github创建仓库\n\n### 1.创建Github仓库\n\n找到Repositories,点击new，写入仓库名，注意仓库要公开的，选择Public，然后创建\n\n### 2.将图片推送到仓库\n\n在本地文件夹使用Git Bash，与创建的Github仓库连接，放入图片\n\n```c\ngit add * //*代表当前目录所有文件\ngit commit -m \"写要提交的信息\"\ngit push //推送到远程仓库\n```\n\n## 三、使用jsDelive加载图片\n\n根据格式写出来的链接相对于一个外链，直接使用即可\n\n```c\nhttps://cdn.jsdelivr.net/gh/你的用户名/你的仓库名@发布的版本号/文件路径\n\n//例\nhttps://cdn.jsdelivr.net/gh/FiveMoonL/mycdn/images/background2.png\n```\n\n","tags":["Github","jsDlive"]},{"title":"Github的使用","url":"/2022/01/22/Github的使用/","content":"## 一、使用Github搜索项目\n\n> 最简单的是直接使用搜索框搜索项目，但这样搜索出来的项目多且乱，不知道使用那一个比较好，使用Github高级搜索语法能更快让我们找到想要的项目\n<!-- more -->\n### Github高级搜索语法\n\n#### 1.stars\n\n想要找到高质量的项目，可通过筛选star数找到多人收藏的。stars:>3000，直接在搜索的项目后面加空格写入即可找到star三千以上的项目。\n\n#### 2.pushed\n\n如果想找最近有更新的项目，可使用这个。pushed：>2022-1-1,即可找到2022年一月一号也后更新的项目\n\n#### 3.desciption\n\n搜索项目的简介。in:description 博客，即可找到简介有博客这个词的项目\n\n#### 4.language\n\n搜索项目的语言\n\n## 二、本地文件上传到Github仓库\n\n> 需要先配置SSH key。cd ~/. ssh #检查本机已存在的ssh密钥，如果提示：No such file or directory 说明你是第一次使用git，则需要配置。已经安装了node.js、npm、git\n\n在Repositories中新建一个仓库，在本地新建文件夹，点击进入后，打开Git Bash或cmd命名窗口\n\n初始化本地仓库\n\n```c\ngit init\n```\n\n将文件提交到暂存区, . 是选择所有文件\n\n```c\ngit add .\ngit commit -m \"写提交文件的说明\"\ngit branch -M main 第一次创建需要写\ngit remoted aa origin xxxx 写仓库的地址，第一次提交需要写\ngit push -u origin main\t提交到远程仓库    \n```\n\n## 三、将Github项目下载到本地\n\n有两个办法，一、直接下载压缩包，二、git clone 地址，下载到本地","tags":["Github"]},{"title":"我的hexo小文章","url":"/2022/01/18/我的hexo小文章/","content":"\n# 啊啊啊啊啊\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\nhh\n<!-- more -->\n111\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n\n\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的滚滚滚滚滚滚滚滚顶顶顶顶顶顶顶淡淡的\n![dd](https://cdn.jsdelivr.net/gh/FiveMoonL/mycdn/images/background2.png)\n\n\n\n\n\n","tags":["关于hexo"]},{"title":"我的文档","url":"/2022/01/15/我的文档/","content":"![](banner.png)\n# 法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\nv\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\n\n法国队灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌灌vvvvvv1\nv\n\n# Frist\n![本地](我的文档/banner.png)\n![Moon](/img/banner.png)\n## 用外链比较好，本地只能进入文章才有，绝对路径才可以在外面的时候也能看\n# 选择自由绝对路径或者，但为什么会全显示\n![mycdn](https://cdn.jsdelivr.net/gh/FiveMoonL/mycdn/images/banner.png)","tags":["第一个"]},{"title":"myF","url":"/2022/01/15/myF/"},{"title":"Hello World","url":"/2022/01/15/hello-world/","content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n"}]